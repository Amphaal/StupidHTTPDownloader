name: CMake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  CI:
    strategy:
        fail-fast: false
        matrix:
          include:
            - name: Windows
              os: windows-latest
              CXX: clang++
            - name: MacOS
              os: macOS-11
              CXX: clang++


    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on:  ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Install ninja-build tool
      uses: seanmiddleditch/gha-setup-ninja@v3

    - name: Expose llvm PATH for Mac
      if: ${{ runner.os == 'macOS' }}
      run: echo "/usr/local/opt/llvm/bin/" >> $GITHUB_PATH

    - name: Deps for MacOS
      if: ${{ runner.os == 'macOS' }}
      run: brew install catch2 spdlog asio openssl@3

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      # still enforcing clang++ to force MacOS cmake to select LLVM's clang and not Apple
      run: cmake -GNinja -B ${{github.workspace}}/build -DBUILD_TESTING=1 -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_COMPILER=clang++

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build/tests
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ./SHTTPD_tests
